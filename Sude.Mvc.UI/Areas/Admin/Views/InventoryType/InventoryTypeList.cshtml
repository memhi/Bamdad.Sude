@using Sude.Dto.DtoModels.Result
@using Sude.Dto.DtoModels.Serving
@model ResultSetDto<IEnumerable<InventoryTypeDetailDtoModel>>



    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title"> @_SudeSessionContext.GetLocalResourceValue("Page.Content.InventoryTypeList")</h3>

                    <div class="box-tools">

                        <a id="btnAdd" class="btn btn-block btn-success"><span class="fa fa-plus margin-r-5"></span><lable>@_SudeSessionContext.GetLocalResourceValue("Page.Button.New")</lable></a>

                    </div>
                </div>
                <!-- /.box-header -->
                <div class="box-body table-responsive no-padding">
                    <table class="table table-hover">
                        <tr>
                            <th>#</th>
                            <th>@_SudeSessionContext.GetLocalResourceValue("Page.Content.Title")</th>
                            <th>@_SudeSessionContext.GetLocalResourceValue("Page.Content.Description")</th>
                            <th>@_SudeSessionContext.GetLocalResourceValue("Page.Content.Operation")</th>

                        </tr>
                        @{
                            int i = 1;
                            if (Model != null && Model.Data != null)
                            @foreach (var item in Model.Data)
                            {

                                <tr id="tr_@item.InventoryTypeId" role="row" class="odd">
                                    <td>@(i++)</td>
                                    <td>@item.Title</td>

                                    <td>@item.Description</td>
                                    <td>
                                        <button class="btn btn-warning btn-sm" onclick="ShowEditInventoryTypePop('@item.InventoryTypeId')"><span class="fa fa-edit margin-r-5"></span><lable>@_SudeSessionContext.GetLocalResourceValue("Page.Button.Edit")</lable></button>
                                        <button class="btn btn-info btn-sm" onclick="ShowNewPageModalDetailInventoryType('@item.InventoryTypeId')"><span class="fa fa-info margin-r-5"> </span><lable>@_SudeSessionContext.GetLocalResourceValue("Page.Button.Detail")</lable></button>
                                        <button class="btn btn-danger btn-sm" onclick="DeleteInventoryType('@item.InventoryTypeId')"><span class="fa fa-remove margin-r-5"></span><lable>@_SudeSessionContext.GetLocalResourceValue("Page.Button.Delete")</lable></button>

                                    </td>
                                </tr>
                            }
                        }
                    </table>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>


    </div>





    <script>
        function DeleteInventoryType(InventoryTypeId) {

            swal.fire({
                title: '@_SudeSessionContext.GetLocalResourceValue("Page.Message.Delete")',
                text: "@_SudeSessionContext.GetLocalResourceValue("Page.Message.DeleteWarning")",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#7cacbe',
                cancelButtonColor: '#d33',
                confirmButtonText: '@_SudeSessionContext.GetLocalResourceValue("Page.Button.DeleteYes")',
                cancelButtonText: '@_SudeSessionContext.GetLocalResourceValue("Page.Button.No")',
                position: 'top',
                showClass: {
                    popup: 'animate__animated animate__fadeIn'
                },
                hideClass: {
                    popup: 'animate__animated animate__fadeOut'
                }
            }).then((result) => {
                if (result.value) {

                    $.ajax({
                        url: "InventoryType/Delete/" + InventoryTypeId,
                        type: "Get",
                        success: function (result) {
                            if (result.isSucceed == true) {
                                Command: toastr["success"]("@_SudeSessionContext.GetLocalResourceValue("Page.Message.InventoryTypeDeleted")");


                                $("#tr_" + InventoryTypeId).addClass("danger");
                                $("#tr_" + InventoryTypeId).hide('slow');
                                $("#InventoryTypeView").load("InventoryType/List");
                            }
                            else {

                                Command: toastr["warning"](result.message, "@_SudeSessionContext.GetLocalResourceValue("Page.Message.Warning")");

                            }
                        },
                        error: function (request, status, error) {
                            alert(request.responseText);
                        }

                    });

                }
            })
        }


        $("#btnAdd").click(function () {
            searchInventoryType
            $("#searchInventoryType").hide();
            $("#InventoryTypeView").load("InventoryType/Add");
        });


        function ShowEditInventoryTypePop(InventoryTypeId) {
            $.get("InventoryType/Edit/" + InventoryTypeId, function (result) {

                $("#myModal").modal('show');
                $("#myModalLabel").html("@_SudeSessionContext.GetLocalResourceValue("Page.Button.Edit")");
                $("#myModalBody").html(result);
            });
        }




        function ShowEditInventoryType(InventoryTypeId) {
            $("#InventoryTypeView").load("InventoryType/Edit/" + InventoryTypeId);

        }


        function ShowNewPageModalDetailInventoryType(InventoryTypeId) {


            $.get("InventoryType/Detail/" + InventoryTypeId, function (result) {

                $("#myModal").modal('show');
                $("#myModalLabel").html("@_SudeSessionContext.GetLocalResourceValue("Page.Button.Detail")");
                $("#myModalBody").html(result);
            });
        }

    </script>